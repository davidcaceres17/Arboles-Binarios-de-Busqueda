/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package ArbolbinariosdeBusquedaUMG;
import java.util.Random;

public class App {
    public String getGreeting() {
        return "Hello World!";
    }
    
    class Nodo
      {
        int info;
        Nodo izq, der;
      }
      Nodo raiz;
      
      public App() {
          raiz=null;
      }
      
      public void insertar (int infoormacion)
      {
          Nodo nuevo;
          nuevo = new Nodo ();
          nuevo.info = infoormacion;
          nuevo.izq = null;
          nuevo.der = null;
          if (raiz == null)
              raiz = nuevo;
          else
          {
              Nodo anterior = null, recolectar;
              recolectar = raiz;
              while (recolectar != null)
              {
                  anterior = recolectar;
                  if (infoormacion < recolectar.info)
                      recolectar = recolectar.izq;
                  else
                      recolectar = recolectar.der;
              }
              if (infoormacion < anterior.info)
                  anterior.izq = nuevo;
              else
                  anterior.der = nuevo;
          }
      }


      private void imprimirPre (Nodo recolectar)
      {
          if (recolectar != null)
          {
              System.out.print(recolectar.info + "\n ");
              imprimirPre (recolectar.izq);
              imprimirPre (recolectar.der);
          }
      }

      public void imprimirPre ()
      {
          imprimirPre (raiz);
          System.out.println();
      }

      private void imprimirEntre (Nodo recolectar)
      {
          if (recolectar != null)
          {    
              imprimirEntre (recolectar.izq);
              System.out.print(recolectar.info + "\n ");
              imprimirEntre (recolectar.der);
          }
      }

      public void imprimirEntre ()
      {
          imprimirEntre (raiz);
          System.out.println();
      }
      
      public void imprimirPost ()
      {
          imprimirPost (raiz);
          System.out.println();
      }


      private void imprimirPost (Nodo recolectar)
      {
          if (recolectar != null)
          {
              imprimirPost (recolectar.izq);
              imprimirPost (recolectar.der);
              System.out.print(recolectar.info + "\n");
          }
      }

    public static void main(String[] args) {
         App abo = new App ();
          for(int r=0; r<=999999; r++){
                    Random aleatorio = new Random();
                     int cadena=aleatorio.nextInt();
                     abo.insertar(cadena);
          }
                     
          System.out.println ("Impresion preorden: ");
          abo.imprimirPre ();
          System.out.println ("Impresion entreorden: ");
          abo.imprimirEntre ();
          System.out.println ("Impresion postorden: ");
          abo.imprimirPost ();  
    }
}
